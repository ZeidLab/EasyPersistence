<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <IsPackable>true</IsPackable>
    <OutputType>Library</OutputType>

    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>EasyPersistence.EFCore.snk</AssemblyOriginatorKeyFile>
    <PublicSignedKey>0024000004800000940000000602000000240000525341310004000001000100d18894997cc753770ca16558e7a1e3e8358f88b84b6359a894ac301204c53706df4f0c4d1041ecf08daadcf03e44f328680cc85702b2785abe3ef02cd84a1c43300c2db16c7c08f9fb5be9082e3fd5e4b2c4dec0972a3efa62a832d493903b0617ee56e401cd6ce7eb8b942bba03a8f8d7d131d636282ed9dcfdffe7f9ec1ce6</PublicSignedKey>
    <!-- Include the build assets in the package -->
    <IncludeBuildOutput>true</IncludeBuildOutput>

    <!-- Versioning -->
    <Deterministic>true</Deterministic>
    <VersionBase>1.0</VersionBase>
    <BuildNumber>$([System.DateTime]::Now.ToString("yyMM"))</BuildNumber>
    <Revision>$([System.DateTime]::Now.ToString("ddHH"))</Revision>
    <Version>$(VersionBase).$(BuildNumber).$(Revision)</Version>
    <!-- Basic Project Properties -->
    <PackageId>$(RootNamespace)</PackageId>
    <PackageVersion>$(Version)</PackageVersion>
    <Title>ZeidLab EasyPersistence EFCore</Title> <!-- A friendly title for your package -->
    <Product>EasyPersistence.EFCore</Product> <!-- The product name -->
    <Description>EasyPersistence.EFCore extends Entity Framework Core with high-performance repository and unit of work patterns, advanced fuzzy search and n-gram extensions, and SQL CLR integration for efficient search. Designed for scalable, maintainable, and testable .NET data layers, it follows modern C# and Microsoft coding standards, with comprehensive XML documentation and NuGet-ready modularity.</Description>
    <PackageTags>
      entity-framework-core efcore repository-pattern unit-of-work fuzzy-search ngram sqlclr extensions data-access dotnet persistence orm csharp12 nuget
    </PackageTags>
    <PackageProjectUrl>https://github.com/ZeidLab/EasyPersistence</PackageProjectUrl>
    <RepositoryUrl>https://github.com/ZeidLab/EasyPersistence</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression> <!-- Specify the license type -->

    <!-- Documentation -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl> <!-- Publish the repository URL in the package -->

    <!-- Publish documentation file -->
    <DocumentationFile>$(MSBuildProjectName).xml</DocumentationFile>
    <GenerateDocumentationFile>true</GenerateDocumentationFile> <!-- Generate XML documentation -->
    <PublishDocumentationFile>true</PublishDocumentationFile>
    <PackageReadmeFile>README.md</PackageReadmeFile>


    <!-- Source Link Support -->
    <IncludeSymbols>true</IncludeSymbols> <!-- Include symbols in the package -->
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>

  </PropertyGroup>
  
  <ItemGroup Label="Documentation and Source Files">
    <None Include="..\..\README.md" Pack="true" PackagePath="\"/>
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All"/>
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Hosting.Abstractions"/>
    <PackageReference Include="Microsoft.AspNetCore.Http.Abstractions"/>
    <PackageReference Include="Microsoft.EntityFrameworkCore"/>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational"/>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Abstractions"/>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup Label="Code Analyzers">
    <PackageReference Include="AsyncMethodNameFixer" PrivateAssets="All"/>
    <PackageReference Include="ConfigureAwaitChecker.Analyzer"  PrivateAssets="All" />
    <PackageReference Include="ConfigureAwaitEnforcer" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" PrivateAssets="All" />
    <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CodeAnalysis.BannedApiAnalyzers" PrivateAssets="All" />
    <PackageReference Include="Roslynator.Analyzers" PrivateAssets="All" />
    <PackageReference Include="Roslynator.CodeAnalysis.Analyzers" PrivateAssets="All" />
    <PackageReference Include="Roslynator.Formatting.Analyzers" PrivateAssets="All" />
    <PackageReference Include="SonarAnalyzer.CSharp">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Meziantou.Analyzer">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SecurityCodeScan.VS2019" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup Label="Test Assembly Attributes">
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(AssemblyName).Test.UI, PublicKey=$(PublicSignedKey)</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(AssemblyName).Test.Integrations, PublicKey=$(PublicSignedKey)</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(AssemblyName).Test.Units, PublicKey=$(PublicSignedKey)</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>DynamicProxyGenAssembly2, PublicKey=0024000004800000940000000602000000240000525341310004000001000100d18894997cc753770ca16558e7a1e3e8358f88b84b6359a894ac301204c53706df4f0c4d1041ecf08daadcf03e44f328680cc85702b2785abe3ef02cd84a1c43300c2db16c7c08f9fb5be9082e3fd5e4b2c4dec0972a3efa62a832d493903b0617ee56e401cd6ce7eb8b942bba03a8f8d7d131d636282ed9dcfdffe7f9ec1ce6</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <ItemGroup>
    <!-- Reference the EfCoreSqlClr project -->
    <ProjectReference Include="..\EfCoreSqlClr\EfCoreSqlClr.csproj"/>
  </ItemGroup>

  <Target Name="BuildEfCoreSqlClr" BeforeTargets="Build">
    <!-- Build EfCoreSqlClr in Release mode -->
    <MSBuild Projects="..\EfCoreSqlClr\EfCoreSqlClr.csproj" Targets="Build" Properties="Configuration=Release"/>
  </Target>

  <Target Name="PackEfCoreSqlClrDll" AfterTargets="Build">
    <!-- Copy the EfCoreSqlClr.dll to the output directory with retry logic -->
    <Copy
      SourceFiles="..\EfCoreSqlClr\bin\Release\EasyPersistence.EfCoreSqlClr.dll"
      DestinationFolder="$(OutputPath)"
      SkipUnchangedFiles="true"
      ContinueOnError="true"
      RetryDelayMilliseconds="500"
      Retries="5">
    </Copy>

    <!-- Include the EasyPersistence.EfCoreSqlClr.dll in the NuGet package -->
    <ItemGroup>
      <None Include="$(OutputPath)\EasyPersistence.EfCoreSqlClr.dll" Pack="true" PackagePath="lib\net48\"/>
    </ItemGroup>
  </Target>
</Project>
