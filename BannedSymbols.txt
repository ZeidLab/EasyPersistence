# BannedSymbols.txt - Best practices for .NET Standard 2.0 libraries
# https://github.com/dotnet/roslyn-analyzers/blob/master/src/Microsoft.CodeAnalysis.BannedApiAnalyzers/BannedApiAnalyzers.Help.md

#######################
# Date and Time Usage #
#######################
# Always use UTC time to avoid timezone issues
P:System.DateTime.Now;Use System.DateTime.UtcNow instead
P:System.DateTimeOffset.Now;Use System.DateTimeOffset.UtcNow instead
P:System.DateTimeOffset.DateTime;Use System.DateTimeOffset.UtcDateTime instead
M:System.IO.File.GetCreationTime(System.String);Use GetCreationTimeUtc instead

#########################
# String Comparisons    #
#########################
# For most string operations in libraries, Ordinal is correct (not culture-sensitive)
F:System.StringComparison.InvariantCulture;Do you mean Ordinal?
F:System.StringComparison.InvariantCultureIgnoreCase;Do you mean OrdinalIgnoreCase?
P:System.StringComparer.InvariantCulture;Do you mean Ordinal?
P:System.StringComparer.InvariantCultureIgnoreCase;Do you mean OrdinalIgnoreCase?

#######################
# Async Best Practices #
#######################
# Prefer async methods to avoid blocking threads
M:System.Threading.Thread.Sleep(System.Int32);Use Task.Delay for non-blocking wait
M:System.IO.File.ReadAllText(System.String);Use async version ReadAllTextAsync instead
M:System.IO.File.WriteAllText(System.String,System.String);Use async version WriteAllTextAsync instead

#######################
# Exception Handling  #
#######################
# Use specific exceptions and safer patterns
T:System.Exception;Use more specific exception types
M:System.Int32.Parse(System.String);Use TryParse to handle failures gracefully

#######################
# Object Creation     #
#######################
# Use factory methods and safer initialization patterns
M:System.Activator.CreateInstance;Consider using a factory pattern or dependency injection
M:System.Guid.#ctor;Use Guid.NewGuid() instead of new Guid()

#######################
# Security Concerns   #
#######################
# Use secure alternatives for sensitive operations
T:System.Random;Use System.Security.Cryptography.RandomNumberGenerator for secure random values

#######################
# Reflection Usage    #
#######################
# Minimize reflection which can cause runtime failures
M:System.Type.GetType(System.String);Can cause runtime failures, consider alternative approaches